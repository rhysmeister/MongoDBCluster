---
  - name: Add repository
    yum_repository:
      name: mongodb-org-3.4
      description: Official MongoDB 3.4 yum repo
      baseurl: https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/3.4/x86_64/
      gpgcheck: 1
      gpgkey: https://www.mongodb.org/static/pgp/server-3.4.asc

  - name: Install MongoDB packages on the mongos servers
    yum:
      name: ["mongodb-org",
             "mongodb-org-mongos",
             "mongodb-org-server",
             "mongodb-org-shell",
             "mongodb-org-tools"]
      enablerepo: "mongodb-org-3.4"
      state: "installed"
    when: ansible_hostname in groups['mongos']

  - name: Install MongoDB packages on the shard servers
    yum:
      name: ["mongodb-org-server",
             "mongodb-org-shell",
             "mongodb-org-tools"]
      enablerepo: "mongodb-org-3.4"
      state: "installed"
    when: ansible_hostname in groups['mongod']

  - name: Ensure files and directories are owned by mongod
    file:
      path: ["/var/log/mongodb/", "/var/lib/mongo", "/var/run/mongodb/mongod.pid"]
      owner: "mongod"
      group: "mongod"
      recurse: "yes"

  - name: Generate /etc/hosts file
    template:
      src: templates/hosts.j2
      dest: /etc/hosts

  - name: Copy mongod config file to hosts
    template:
      src: "../templates/mongod.conf"
      dest: "/etc/mongod.conf"
      backup: "yes"
      owner: "mongod"
      group: "mongod"
      mode: 0644
    when: ansible_hostname in item['members'] | regex_replace("\\.local", "") and ansible_hostname in groups['mongod']
    with_items: "{{ mongodb_shards }}"

  - name: Ensure mongod service is running
    service:
      name: "mongod"
      state: "started"
      enabled: yes

  - name: Ensure mongos service is running
    service:
      name: "mongos"
      state: "started"
      enabled: yes
    when: ansible_hostname in groups['mongos']

  - name: Give mongod daemon a little time
    pause:
      seconds: 30

  - name: Copy RS Setup Script to lead node of each shard
    template:
      src: templates/rs_init.j2
      dest: /home/vagrant/rs.js
    when: ansible_hostname == item['members'][0] | regex_replace("\\.local", "") and ansible_hostname in groups['mongod']
    with_items: "{{ mongodb_shards }}"

  - name: Execute rs Setup Script on each lead node_name
    shell: mongo /home/vagrant/rs.js && touch /home/vagrant/rs.success
    args:
      creates: /home/vagrant/rs.success
    register: rs
    when: ansible_hostname == item['members'][0] | regex_replace("\\.local", "") and ansible_hostname in groups['mongod']
    with_items: "{{ mongodb_shards }}"

  - name: Copy sharding script to a mongos instance
    template:
      src: templates/sharding.j2
      dest: /home/vagrant/sharding.js
    when: ansible_hostname == "mongos1"
    with_items: "{{ mongodb_shards }}"

  - name: Execute sharding setup
    shell: mongo /home/vagrant/sharding.js && touch /home/vagrant/sharding.success
    args:
      creates: /home/vagrant/sharding.success
    register: sharding
    when: ansible_hostname == "mongos1"
    with_items: "{{ mongodb_shards }}"
